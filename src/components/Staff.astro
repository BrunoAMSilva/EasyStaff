---
import type { HTMLAttributes } from "astro/types";
import Measure from "./Measure.astro";

interface Props extends HTMLAttributes<"div"> {
    staff: StaffData;
    tempo: number;
}

const { staff, tempo, class: className = "", ...rest } = Astro.props as Props;
const measures = staff.measures.length;
---

<div class={`musical-score ${className}`} {...rest}>
    <div class="flex overflow-x-clip">
        <h3
            class={`self-center text-center z-10 sticky left-0 px-10 min-w-[16rem] flex-none ${staff.clef === "bass" ? "text-[12rem]" : "text-[20rem]"}`}
        >
            {staff.clef === "bass" ? <>&#119074;</> : <>&#119070</>}
        </h3>
        <div class="staff-host flex-1 grid grid-flow-col">
            {staff.measures.map((measure) => <Measure measure={measure} />)}
        </div>
    </div>
</div>
<style define:vars={{tempo, measures}}>
    @keyframes translate {
        0% {
            transform: translateX(0);
        }
        100% {
            transform: translateX(-100%);
        }
    }
    .staff-host {
        animation: translate
            calc(60s / var(--tempo, 120) * 4 * var(--measures, 1)) linear
            infinite;
    }
</style>
