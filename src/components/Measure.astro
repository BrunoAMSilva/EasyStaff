---
import type { HTMLAttributes } from "astro/types";
import Note from "./Note.astro";

interface Props extends HTMLAttributes<"div"> {
    measure: Measure;
    measureIndex: number;
    clef: "treble" | "bass";
}

const {
    measure,
    measureIndex,
    clef,
    class: className = "",
    ...rest
} = Astro.props as Props;

/* console.log(measure.beats[2].tokens, 'measure beats'); */
---

<div class="measure-delimiter col-span-4 row-start-4 row-end-11 -my-[.8rem] border-gray-600 dark:border-gray-400 border-r-2 -mr-[.06rem]"></div>
{
    measure.beats.map((beat, index) => {
        if (!beat) return null;
        return beat.tokens.map((note, noteIndex) => {
            if (note.type !== "note") return null;

            return (
                <Note
                    note={note}
                    beat={(index + 1) + ((measureIndex) * 4)}
                    clef={clef}
                />
            );
        });
    })
}
<style define:vars={{measureIndex}}>
    .measure-delimiter {
        grid-column-start: calc((var(--measureIndex) * 4) - 3);
    }
</style>