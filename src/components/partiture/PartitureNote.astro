---
import type { Measure, Note } from "../../content.config";
import { getNoteColorByStep } from "../../utils/note-colors";
import { getNoteName } from "../../utils/note-notation";
import { getNoteLinePosition } from "../../utils/note-position";

interface Props {
    note: Note;
    measure: Measure;
    beat: number;
}

const { note, measure, beat } = Astro.props;

const color = getNoteColorByStep(note.pitch?.step || "");

const stave = note.staff || 1;
const duration = note.duration || 1;
const fingering = note.notations?.technical?.fingering || null;
const pitch = note.pitch;
let row = 0;
let letterNote = "";
let solfegeNote = "";
let octave = 0;
if (pitch) {
    octave = pitch.octave ?? 4;
    const step = pitch.step;
    row = getNoteLinePosition(
        step,
        octave || 4,
        stave === 1 ? "treble" : "bass",
    );
    letterNote = step ? getNoteName(step, "letter") : "";
    solfegeNote = step ? getNoteName(step, "solfege") : "";
}
---

{!note.rest && (<div
    style={`grid-row: ${row}; grid-column: ${beat} / span ${duration};`}
    class={`note-visual flex items-center justify-between mx-2 pl-2 rounded-lg text-white/80 text-md font-semibold ${color}`}
>
    <span class="note-labels flex flex-col gap-0.5">
        <span class="notation-label notation-letter uppercase"
            >{letterNote}{octave}</span
        >
        <span class="notation-label notation-solfege uppercase"
            >{solfegeNote} {octave}</span
        >
    </span>
    {
        fingering && (
            <span class="rounded-r-lg bg-black/20 font-light text-xs h-full aspect-square text-center grid place-content-center">
                {fingering}
            </span>
        )
    }
</div>)}
{note.rest && (
    <div style={`grid-column: ${beat}`}>Rest</div>
)}

<style>
    .note-visual {
        background-image: linear-gradient(
            to right,
            transparent,
            rgb(255 255 255 / 0.4)
        );
        background-blend-mode: overlay;
    }
</style>