---
import type { HTMLAttributes } from "astro/types";
import { getNoteColor } from "../utils/note-colors";
import { getNoteFinger, getNotePosition } from "../utils/note-position";
import type { Token } from "../types/Notation";

interface Props extends HTMLAttributes<"span"> {
    note: Extract<Token, { type: "note" }>;
    beat: number;
    clef: 'treble' | 'bass';
}
const { note, beat, class: className, clef, ...rest } = Astro.props;

const color = getNoteColor(note.value);
const positionClass = getNotePosition(note.value, clef);
const finger = getNoteFinger(note.value, clef);
---

<div
    class={`note-visual flex justify-between mx-2 pl-2 rounded-lg text-white text-md font-semibold uppercase ${color} ${positionClass} ${className ? className : ""}`}
    style={`grid-column: ${beat} / span ${note.duration};`}
    {...rest}>{note.value}<span class="rounded-r-lg bg-black/20 font-light text-xs h-full aspect-square text-center grid place-content-center">{finger}</span></div>

<style>
    .note-visual {
        transition: opacity 0.3s ease, filter 0.3s ease;
    }
    .note-visual.complete {
        opacity: 0.5;
        transition-duration: 500ms;
        filter: saturate(0.2);
    }
</style>